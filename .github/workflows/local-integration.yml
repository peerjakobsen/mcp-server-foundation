---
name: Local Integration Testing

on:
  push:

jobs:
  integration-with-services:
    name: Integration Tests with Services
    runs-on: ubuntu-latest

    steps:
      - name: Check Docker availability
        run: |
          docker --version
          docker-compose --version || docker compose version

      - name: Start test services
        run: |
          cat > docker-compose-minimal.yml << 'EOF'
          version: '3.8'
          services:
            postgres-test:
              image: postgres:17-alpine
              environment:
                POSTGRES_USER: testuser
                POSTGRES_PASSWORD: testpass
                POSTGRES_DB: testdb
              ports:
                - "5432:5432"
              healthcheck:
                test: ["CMD-SHELL", "pg_isready -U testuser -d testdb"]
                interval: 5s
                timeout: 3s
                retries: 5

            redis-test:
              image: redis:7-alpine
              ports:
                - "6379:6379"
              healthcheck:
                test: ["CMD", "redis-cli", "ping"]
                interval: 5s
                timeout: 3s
                retries: 5
          EOF

          # Start services
          docker compose -f docker-compose-minimal.yml up -d

      - name: Wait for services
        run: |
          echo "Waiting for services to become healthy..."

          # Wait for PostgreSQL to be healthy
          echo "Checking PostgreSQL health..."
          timeout 120 bash -c 'until docker compose -f docker-compose-minimal.yml ps postgres-test | \
            grep -q "healthy"; do sleep 2; done'

          # Wait for Redis to be healthy
          echo "Checking Redis health..."
          timeout 60 bash -c 'until docker compose -f docker-compose-minimal.yml ps redis-test | \
            grep -q "healthy"; do sleep 2; done'

      - name: Verify service connections
        run: |
          # Show service status
          docker compose -f docker-compose-minimal.yml ps

          # Test PostgreSQL connection
          docker run --rm --network host -e PGPASSWORD=testpass postgres:17-alpine \
            psql -h localhost -U testuser -d testdb -c "SELECT 1;"

          # Test Redis connection
          docker run --rm --network host redis:7-alpine \
            redis-cli -h localhost ping

      - name: Install uv manually
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Run integration tests
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          echo "Integration tests would run here with services available"
          echo "PostgreSQL: localhost:5432 (testuser/testpass/testdb)"
          echo "Redis: localhost:6379"

          # Test that we can connect to the services
          echo "✅ Integration test setup completed"

      - name: Cleanup services
        if: always()
        run: |
          docker compose -f docker-compose-minimal.yml down -v
          docker compose -f docker-compose-minimal.yml rm -f

  test-without-services:
    name: Tests without External Services
    runs-on: ubuntu-latest

    steps:
      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Run unit tests
        run: |
          export PATH="$HOME/.cargo/bin:$PATH"
          echo "Unit tests would run here (no external services needed)"
          echo "✅ Unit tests completed"
