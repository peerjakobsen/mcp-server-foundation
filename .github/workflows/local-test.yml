name: Local Testing with act

on:
  workflow_dispatch:
  push:

jobs:
  basic-test:
    name: Basic Local Test
    runs-on: ubuntu-latest

    steps:
    - name: Check Python version
      run: |
        python3 --version
        which python3

    - name: Check directory structure
      run: |
        pwd
        ls -la

    - name: Install uv manually
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Verify uv installation
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        uv --version

    - name: Create basic test directory
      run: |
        mkdir -p ./data
        mkdir -p ./test_output

    - name: Python environment test
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        python3 -m venv test_venv
        source test_venv/bin/activate
        python --version
        pip --version

    - name: Basic pytest test
      run: |
        export PATH="$HOME/.cargo/bin:$PATH"
        # If uv is available, use it; otherwise use pip
        if command -v uv >/dev/null 2>&1; then
          echo "Using uv for dependencies"
          uv venv test_env
          source test_env/bin/activate
          uv pip install pytest
        else
          echo "Using system pip for dependencies"
          python3 -m venv test_env
          source test_env/bin/activate
          pip install pytest
        fi

        # Create a simple test
        echo "def test_basic(): assert 1 + 1 == 2" > basic_test.py
        python -m pytest basic_test.py -v

  simple-code-quality:
    name: Simple Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Check code formatting (basic)
      run: |
        echo "Checking basic formatting..."
        # Basic syntax check if Python files exist
        if find . -name "*.py" -type f | head -1 > /dev/null; then
          echo "Found Python files, checking syntax..."
          python3 -m py_compile src/mcp_server/*.py || echo "Syntax check skipped - files not found"
        else
          echo "No Python files found to check"
        fi

    - name: Install basic linting tools
      run: |
        python3 -m pip install flake8 || echo "Flake8 installation failed"

    - name: Run basic linting (if possible)
      run: |
        if command -v flake8 >/dev/null 2>&1 && [ -d "src" ]; then
          echo "Running flake8 linting..."
          flake8 src/ || echo "Linting completed with issues"
        else
          echo "Skipping linting - tools or source not available"
        fi
